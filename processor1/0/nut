/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2412                                  |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      binary;
    arch        "LSB;label=32;scalar=64";
    class       volScalarField;
    location    "0";
    object      nut;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 2 -1 0 0 0 0];

internalField   uniform 0;

boundaryField
{
    frontAndBack
    {
        type            calculated;
        value           uniform 0;
    }
    inlet
    {
        type            calculated;
        value           nonuniform List<scalar> 0;
    }
    outlet
    {
        type            calculated;
        value           uniform 0;
    }
    lowerWall
    {
        type            nutkWallFunction;
        value           uniform 0;
    }
    upperWall
    {
        type            calculated;
        value           uniform 0;
    }
    mainBody
    {
        type            nutkWallFunction;
        value           nonuniform List<scalar> 0;
    }
    FL
    {
        type            nutkWallFunction;
        value           nonuniform List<scalar> 0;
    }
    FR
    {
        type            nutkWallFunction;
        value           nonuniform List<scalar> 0;
    }
    RL
    {
        type            nutkWallFunction;
        value           nonuniform List<scalar> 0;
    }
    RR
    {
        type            nutkWallFunction;
        value           nonuniform List<scalar> 0;
    }
    procBoundary1to0
    {
        type            processor;
        value           uniform 0;
    }
    procBoundary1to2
    {
        type            processor;
        value           uniform 0;
    }
    procBoundary1to4
    {
        type            processor;
        value           uniform 0;
    }
}


// ************************************************************************* //
